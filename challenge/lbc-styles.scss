@import url('https://fonts.googleapis.com/css2?family=Lato&family=Lora:ital,wght@0,400;0,700;1,400;1,700&family=Berkshire+Swash&display=swap');

$color-primary: #205169;
$color-secondary: #102D30;
$color-highlight: #FFE900;
$color-background: #030C0D;
$color-font-dark: #000203;
$color-font-light: #D6F1FF;
@mixin serif-default { font-family: 'Lora', serif; }
@mixin sans-default { font-family: 'Lato', sans-serif; }
@mixin cursive-default { font-family: 'Berkshire Swash', 'Lora', serif; }

@mixin overlay {
    // position: fixed;
    display: none;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,0.5);
    z-index: 2;
    cursor: pointer;
}

:root {
    @include sans-default;
    color: $color-font-light;
    font-size: 18px;
    line-height: 1.4em;
    caret-color: transparent;
}

body {
    background-color: $color-secondary;
    margin: 0;
}

main {
    margin: auto;
    max-width: 1200px;
    background-color: $color-background;
    min-height: 100vh;
    &.champ-select-view {
        padding: 1em 0.5em;
    }
}

h1, h2, h3, h4, h5, h6 {
    @include serif-default;
}

.site-header {
    display: flex;
    width: 100%;
    height: 40px;
    background-color: $color-primary;
    .site-logo {
        margin: 2px;
    }
    .site-title {
        font: bold 1.5em 'Lora', serif ;  
        line-height: 40px; 
        margin-left: 0.3em;
    }
}

.intro {
    padding: 1em 0.3em;
    text-align: center;
    border: 3px double $color-primary;
    border-radius: 3px;
    h1 {
        margin: 0;
        font-size: 1.8em;
        line-height: 1.2em;
    }
}

.grid-list {
    display: grid;
    font-size: 0.7em;
    gap: 0.5em;
    &.champ-list {
        grid-template-columns: repeat(auto-fit, minmax(80px, auto));

        &.loading {
            grid-template-columns: 20px auto;
            align-items: center;
            p {
                margin: 0;
                font-size: 1.2em;
            }   
        }
    }
    &.item-list {
        grid-template-columns: repeat(auto-fit, minmax(80px, auto));
    }
    figure {
        margin: 0;
        text-align: center;
        line-height: initial;
        cursor: pointer;
        img {
            width: 100%;
        }
        figcaption {
            opacity: 50%;
            margin: 0 0.3em;
        }
    }
}

.champ-list  {
    margin-top: 1em;   
}

.build-view-header {
    display: flex;
    height: 50px;
    @include cursive-default();
    background-color: $color-background;
    font-size: 1.8em;
    .champ-name {
        margin-left: 0.3em;
        align-self: center;
    }
}

.item-belt {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    min-height: 50px;
    background-color: $color-primary;  
    .build-item {
        display: flex;
        justify-content: center;
        border: 2px solid $color-font-light;
        cursor: pointer;
        aspect-ratio: 1;  //possible trouble with iOS
        .add-item-button {
            display: flex;
            align-items: center;
        }
        img {
            max-width: 100%;
        }
    }
    :not(.build-item:last-child) {
        border-right: 0;
    }
}

.build-stats-display {
    padding: 0.2em 0.5em;
    .build-stat {
        margin: 0.5em;
    }
}

.start-hidden {
    display: none;
}

.loading-animation-container {
    height: 20px;
    width: 20px;
    background-color: transparent;
}

.morphing-circle {
    height: 100%;
    width: 100%;
    background-color: $color-primary;	
    border-radius: 50%;
    transition: border-radius .5s ease, 
                background-color .5s ease, 
                transform .5s ease .5s;
    animation: morphing-circle-square 1.5s linear infinite;
}

@keyframes morphing-circle-square {
   0% {border-radius: 50%}
    25% { /*(if you don't add both red and circle here it will start changing one or the other before you are ready) */
        border-radius: 50%;
        background-color: $color-primary;
    }
    50% { /* now change to white square...but don't start rotating yet! */
        border-radius: 0%;
        background-color: $color-font-light;
        transform: rotate(0deg);
    }
    75% { /* stay a white square, but rotate 90deg */
        border-radius: 0%;
        background-color: $color-font-light;
        transform: rotate(90deg);   
    }
    100% { /* stay rotated at 90, but change back to a circle */
        border-radius: 50%;
        background-color: $color-primary;
        transform: rotate(90deg);
    }
}

@media only screen and (min-width: 900px) {
    main.champ-select-view {
        padding: 1em 3em;
    }
}